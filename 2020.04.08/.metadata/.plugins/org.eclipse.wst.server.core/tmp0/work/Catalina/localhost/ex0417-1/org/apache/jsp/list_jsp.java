/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.5
 * Generated at: 2020-04-17 07:43:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import ex0417.*;
import java.util.*;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta charset=\"UTF-8\">\r\n");
      out.write("\t<title>Insert title here</title>\r\n");
      out.write("\t<script src=\"http://code.jquery.com/jquery-1.9.1.js\"></script>\r\n");
      out.write("\t<style>\r\n");
      out.write("\t\t.box{background: #F6F6F6; border-bottom: 1px solid #D5D5D5; width: 1000px; margin: auto;\r\n");
      out.write("\t\t\t text-align: left; padding: 10px;}\r\n");
      out.write("\t\t#page{text-align: center; width: 1200px; margin: auto;}\r\n");
      out.write("\t\t#head{font-size: 30px;}\r\n");
      out.write("\t\t#img{margin: 50px;}\r\n");
      out.write("\t\t#content{width: 500px;}\r\n");
      out.write("\t\t.title{margin-bottom: 20px;}\r\n");
      out.write("\t\t.content{margin-bottom: 10px;}\r\n");
      out.write("\t\t.likeDiv{text-align: right;}\r\n");
      out.write("\t\t.img2{width: 20px; height: 20px;}\r\n");
      out.write("\t\t#insert{margin-bottom: 20px;}\r\n");
      out.write("\t</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"page\">\r\n");
      out.write("\t\t<div id=\"head\">\r\n");
      out.write("\t\t\t<h1>전세계 코로나 현황</h1>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<hr>\r\n");
      out.write("\t\t<div id=\"img\">\r\n");
      out.write("\t\t\t<img src=\"dd.JPG\" width=500 height=700>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<hr>\r\n");
      out.write("\t\t<h1>[댓글관리]</h1>\r\n");
      out.write("\t\t<div id=\"insert\">\r\n");
      out.write("\t\t\t<input type=\"text\" id=\"content\">\r\n");
      out.write("\t\t\t<input type=\"button\" value=\"저장\" id=\"btnInsert\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"box\">\r\n");
      out.write("\t\t\t<div class=\"title\">\r\n");
      out.write("\t\t\t\t<span><img class=\"img2\" src=\"1.jpg\"></span>\r\n");
      out.write("\t\t\t\t<span class=\"date\">2020/04/17 13:00:00</span>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"content\">\r\n");
      out.write("\t\t\t\t유렵의 경우와 비교하면, 사망자는 최소한 30만명 이상을 예상한다.\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div>\r\n");
      out.write("\t\t\t\t<div class=\"likeDiv\" rno=\"1\">\r\n");
      out.write("\t\t\t\t\t<button class=\"delete\">삭제</button>\r\n");
      out.write("\t\t\t\t\t<input class=\"update\" type=\"button\" value=\"♥\">\r\n");
      out.write("\t\t\t\t\t<span class=\"cnt\">120</span>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t");

			ReplayDAO dao=new ReplayDAO();
			ArrayList<ReplayVO> list=dao.list();
			
			for(int i=0; i<list.size(); i++){
				ReplayVO vo=list.get(i);
				int rno=vo.getRno();
				String content=vo.getContent();
				Date wdate=vo.getWdate();
				int cnt=vo.getCnt();
				out.print("<div class=box>");
				out.print("<div class=title>");
				out.print("<span><img class=img2 src=1.jpg></span>");
				out.print("<span class=date>"+wdate+"</span>");
				out.print("</div>");
				out.print("<div class=content>");
				out.print(content);
				out.print("</div>");
				out.print("<div>");
				out.print("<div class=likeDiv rno="+rno+">");
				out.print("<button class=delete>삭제</button>");
				out.print("<input class=update type=button value=♥>");
				out.print("<span class=cnt>"+cnt+"</span>");
				out.print("</div>");
				out.print("</div>");
				out.print("</div>");
				
			}
		
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("\t$(\".box\").on(\"click\",\".delete\",function(){\r\n");
      out.write("\t\tvar rno=$(this).parent().attr(\"rno\");\r\n");
      out.write("\t\tif(confirm(rno+\"번을 삭제하시겠습니까?\")==false) return;\r\n");
      out.write("\t\tlocation.href=\"sqlDelete.jsp?rno=\"+rno;\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$(\".box\").on(\"click\",\".update\",function(){\r\n");
      out.write("\t\tvar rno=$(this).parent().attr(\"rno\");\r\n");
      out.write("\t\tif(confirm(rno+\"번을 좋아요 하시겠습니까?\")==false) return;\r\n");
      out.write("\t\tlocation.href=\"sqlUpdate.jsp?rno=\"+rno;\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#btnInsert\").on(\"click\",function(){\r\n");
      out.write("\t\tif(confirm(\"댓글을 저장하시겠습니까?\")==false) return;\r\n");
      out.write("\t\tvar content=$(\"#content\").val();\r\n");
      out.write("\t\tif(confirm==\"\"){\r\n");
      out.write("\t\t\talert(\"내용을 입력하세요\")\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\tlocation.href=\"sqlInsert.jsp?content=\"+content;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
